import{db as e,initializeMessaging as t}from"./firebase-init.mjs";import{doc as a,getDoc as r,setDoc as i,deleteDoc as n}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-firestore.js";import{getToken as s}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-messaging.js";export async function fetchAndScheduleJamaatReminders(){if(!self.registration)return void console.error("[SW] Service Worker not registered, cannot schedule notifications.");(await self.registration.getNotifications({tag:"jamaat-reminder"})).forEach((e=>e.close()));try{const t=a(e,"/artifacts/masjid-connect-app/public/data/prayerTimes/today"),i=await r(t),n=i.exists()?i.data():{},s=new Date,o=`${String(s.getDate()).padStart(2,"0")}-${String(s.getMonth()+1).padStart(2,"0")}`,c=a(e,`/artifacts/masjid-connect-app/public/data/prayerCalendar/${o}`),m=await r(c);m.exists()&&m.data().Maghrib&&(n.Maghrib=m.data().Maghrib);const g=new Date,d=5===g.getDay()?["Fajr","Jumma","Asr","Maghrib","Isha"]:["Fajr","Zuhr","Asr","Maghrib","Isha"];console.log("[SW] Scheduling reminders for:",d);for(const e of d){const t=n[e];if("string"!=typeof t||!t.includes(":"))continue;const[a,r]=t.split(":");let i=new Date;i.setHours(a,r,0,0),i.getTime()<g.getTime()&&i.setDate(i.getDate()+1);const s=i.getTime()-9e5;if(s>g.getTime()){const t=s-g.getTime();console.log(`[SW] Scheduling ${e} reminder in ${Math.round(t/6e4)} minutes.`),setTimeout((()=>{self.registration.showNotification(`${e} Jama'at Reminder`,{body:`Jama'at for ${e} is in 15 minutes.`,icon:"/fav192.png",tag:"jamaat-reminder"})}),t)}}}catch(e){console.error("[SW] Error fetching and scheduling reminders:",e)}}export async function subscribeToTopic(r,n){if(!n)return console.error("Service Worker not registered, cannot subscribe."),!1;const{messaging:o,messagingSupported:c}=await t();if(!c)return alert("Push notifications are not supported on this device."),!1;try{const t=await s(o,{vapidKey:"BCiOgp50gotHnfdiLjtx86mJZ-hGV94JWVuLjsiPsBd-CFAMpg8REdBZs6zb0Ofr5Lpo7Ezu50yAfEhgmcqIcMY",serviceWorkerRegistration:n});if(t){const n="announcements"===r?"announcementTokens":"jamaatTokens";return await i(a(e,n,t),{subscribedAt:new Date}),"jamaat"===r&&await fetchAndScheduleJamaatReminders(),!0}return!1}catch(e){return console.error(`Error subscribing to ${r}:`,e),!1}}export async function unsubscribeFromTopic(r,i){if(!i)return void console.error("Service Worker not registered, cannot unsubscribe.");const{messaging:o}=await t(),c=await s(o,{serviceWorkerRegistration:i});if(!c)return;const m="announcements"===r?"announcementTokens":"jamaatTokens";if(await n(a(e,m,c)),"jamaat"===r){(await i.getNotifications({tag:"jamaat-reminder"})).forEach((e=>e.close()))}}